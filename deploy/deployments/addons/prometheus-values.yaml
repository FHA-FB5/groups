# see https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
alertmanager:
  config:
    route:
      routes:
        - receiver: "null"
          matchers:
            - alertname =~ "InfoInhibitor|Watchdog"
        - receiver: telegram
          matchers:
            - severity =~ "critical|warning|info"
    receivers:
      - name: "null"
      - name: telegram
        telegram_configs:
          - bot_token: <YOUR_BOT_TOKEN>
            api_url: https://api.telegram.org
            chat_id: <YOUR_CHAT_ID>
  ingress:
    enabled: false
    ingressClassName: nginx
    hosts:
      - <YOUR_URL>
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
    tls:
      - secretName: alertmanager-ingress-tls
        hosts:
          - <YOUR_URL>
grafana:
  adminPassword: <YOUR_PASSWORD>
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
    hosts:
      - <YOUR_URL>
    tls:
      - secretName: grafana-ingress-tls
        hosts:
          - <YOUR_URL>
kube-state-metrics:
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
nodeExporter:
  serviceMonitor:
    relabelings:
      - action: replace
        regex: (.*)
        replacement: $1
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: kubernetes_node
prometheus-node-exporter:
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
kubeProxy:
  enabled: false # kube proxy not used because of proxy replacement by cilium
prometheus:
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
    hosts:
      - <YOUR_URL>
    tls:
      - secretName: prometheus-ingress-tls
        hosts:
          - <YOUR_URL>
  prometheusSpec:
    retention: 14d
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
